#!groovy

JCK_VERSION = params.JCK_VERSION ?: ""
ARTIFACTORY_TOKEN = params.ARTIFACTORY_TOKEN ?: ""
GIT_USER = params.GIT_USER ?: ""
GIT_TOKEN = params.GIT_TOKEN ?: ""
GIT_DEV_BRANCH = params.GIT_DEV_BRANCH ?: ""
JAVA_HOME = params.JAVA_HOME ?: ""

JCK_VERSION_FLAG = JCK_VERSION ? "-j" : ""
ARTIFACTORY_TOKEN_FLAG = ARTIFACTORY_TOKEN ? "-at" : ""
GIT_USER_FLAG = GIT_USER ? "-u" : ""
GIT_TOKEN_FLAG = GIT_TOKEN ? "-gt" : ""
GIT_DEV_BRANCH_FLAG = GIT_DEV_BRANCH ? "-gb" : ""
JAVA_HOME_FLAG = JAVA_HOME ? "-java" : ""

def command = "sh"
def scriptDir = new File(getClass().protectionDomain.codeSource.location.path).parent
def scriptPath = "${scriptDir}/../../jck/jck-semiauto-updater/jckupdater.sh"

def processBuilder = new ProcessBuilder(command, scriptPath, JCK_VERSION_FLAG,JCK_VERSION, ARTIFACTORY_TOKEN_FLAG, ARTIFACTORY_TOKEN, GIT_USER_FLAG, GIT_USER, GIT_TOKEN_FLAG, GIT_TOKEN, GIT_DEV_BRANCH_FLAG,GIT_DEV_BRANCH, JAVA_HOME_FLAG, JAVA_HOME)
def process = processBuilder.start()

def output = new StringBuilder()
def reader = new BufferedReader(new InputStreamReader(process.getInputStream()))
String line
while ((line = reader.readLine()) != null) {
    output.append(line).append('\n')
}
reader.close()

int exitCode = process.waitFor()
 println("Shell script executed with exit code:")
 println("Script output:\n$output")

